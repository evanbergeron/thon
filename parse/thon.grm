structure A = Ast

%%
%header (functor ThonLrValsFn (structure Token : TOKEN))

%eop EOF

%term
   EOF
 | ZERO
 | SUCC
 | LPAREN | RPAREN
 | LAM
 | SARROW
 | ID of string
 | COLON
 | NAT

%nonterm
   exp of A.Exp
 | typ of A.Typ

%verbose
%pos int
%start exp
%eop EOF

%name Thon

%right SUCC
%left ZERO LPAREN

%%

typ:
    NAT (A.Nat)
  | typ SARROW typ (A.Arr(typ1, typ2))
  | LPAREN typ RPAREN (typ)

exp:
    LPAREN exp RPAREN (exp)
  | ZERO (A.Zero)
  | SUCC exp (A.Succ exp)
  (* eventually would rather this be LAM ID COLON typ SARROW exp but
   * not until we manage to turn names into binding site indexes *)
  | LAM typ SARROW exp (A.Lam (typ, exp))
